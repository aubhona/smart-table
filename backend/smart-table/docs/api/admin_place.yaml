openapi: 3.0.3
info:
    title: SmartTable Admin API
    version: 1.0.0
    description: API для управления плейсом.

paths:
    /admin/v1/place/create:
        post:
            summary: Создание плейса
            description: Создание плейса
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1PlaceCreateRequest'
            responses:
                '200':
                    description: Успешное создание плейса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1PlaceCreateResponse'
                '400':
                    description: Ошибка создания плейса, некорректный формат данных
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'              
                '401':
                    description: Ошибка создания плейса, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка создания плейса, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка создания плейса, пользователь или ресторан не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/place/list:
        post:
            summary: Получение списка плейсов пользователя
            description: Получение списка плейсов пользователя
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1PlaceListRequest'
            responses:
                '200':
                    description: Список плейсов ресторана
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1PlaceListResponse'
                '400':
                    description: Ошибка получения списка плейсов ресторана, некорректный формат данных
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'              
                '401':
                    description: Ошибка получения списка плейсов ресторана, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка получения списка плейсов ресторана, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка получения списка плейсов ресторана, пользователь или ресторан не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/place/menu/dish/create:
        post:
            summary: Создание блюда в меню плейса
            description: Создание блюда в меню плейса
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1PlaceMenuDishCreateRequest'
            responses:
                '200':
                    description: Идентификатор созданного блюда
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1PlaceMenuDishCreateResponse'
                '400':
                    description: Ошибка создания блюда в меню плейса, некорректный формат данных
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '401':
                    description: Ошибка создания блюда в меню плейса, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка создания блюда в меню плейса, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка создания блюда в меню плейса, плейс не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/place/employee/add:
        post:
            summary: Добавление сотрудника в плейс
            description: Добавление сотрудника в плейс
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1PlaceEmployeeAddRequest'
            responses:
                '204':
                    description: Сотрудник успешно добавлен в плейс
                '400':
                    description: Ошибка добавления сотрудника в плейс, некорректный формат данных
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'              
                '401':
                    description: Ошибка добавления сотрудника в плейс, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка добавления сотрудника в плейс, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка добавления сотрудника в плейс, логин сотрудника или плейс не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'  

    /admin/v1/place/employee/list:
        post:
            summary: Получение списка сотрудников в плейса
            description: Получение списка сотрудников в плейса
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1PlaceEmployeeListRequest'
            responses:
                '200':
                    description: Список сотрудников плейса
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1PlaceEmployeeListResponse'
                '400':
                    description: Ошибка получения списка сотрудников плейса, некорректный формат данных
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'              
                '401':
                    description: Ошибка получения списка сотрудников плейса, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка получения списка сотрудников плейса, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка получения списка сотрудников плейса, плейс не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

components:
    parameters:
        user_uuid:
            in: header
            name: User-UUID
            description: Уникальный идентификатор пользователя
            required: true
            schema:
                type: string
                format: uuid

        jwt_token:
            in: header
            name: JWT-Token
            description: jwt токен пользователя
            required: true
            schema:
                type: string

    schemas:
        # /admin/v1/place/create_POST
        AdminV1PlaceCreateRequest:
            type: object
            additionalProperties: false
            properties:
                restaurant_uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор ресторана
                address:
                    $ref: '#/components/schemas/Address'
                table_count:
                    $ref: '#/components/schemas/TableCount'
                opening_time:
                    $ref: '#/components/schemas/Time'
                closing_time:
                    $ref: '#/components/schemas/Time'
            required:
                - restaurant_uuid
                - address
                - table_count
                - opening_time
                - closing_time

        AdminV1PlaceCreateResponse:
            type: object
            additionalProperties: false
            properties:
                place_uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор плейса
            required:
                - place_uuid

        # /admin/v1/place/list_POST
        AdminV1PlaceListRequest:
            type: object
            additionalProperties: false
            properties:
                restaurant_uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор ресторана
            required:
                - restaurant_uuid

        AdminV1PlaceListResponse:
            type: object
            additionalProperties: false
            properties:
                place_list:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaceInfo'
            required:
                - place_list

        # /admin/v1/place/employee/add_POST
        AdminV1PlaceEmployeeAddRequest:
            type: object
            additionalProperties: false
            properties:
                place_uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор плейса
                employee_login:
                    $ref: '#/components/schemas/Login'
                employee_role:
                    $ref: '#/components/schemas/Role'
            required:
                - place_uuid
                - employee_login
                - employee_role

      # /admin/v1/place/menu/dish/create_POST
        AdminV1PlaceMenuDishCreateRequest:
            type: object
            additionalProperties: false
            properties:
                place_uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор плейса
                dish_uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор блюда ресторана
                price:
                    type: string
            required:
                - place_uuid
                - dish_uuid
                - price

        AdminV1PlaceMenuDishCreateResponse:
            type: object
            additionalProperties: false
            properties:
                menu_dish_uuid:
                    type: string
                    format: uuid
            required:
                - menu_dish_uuid

        # /admin/v1/place/employee/list_POST
        AdminV1PlaceEmployeeListRequest:
            type: object
            additionalProperties: false
            properties:
                place_uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор плейса
            required:
                - place_uuid
        
        AdminV1PlaceEmployeeListResponse:
            type: object
            additionalProperties: false
            properties:
                employee_list:
                    type: array
                    items:
                        $ref: '#/components/schemas/EmployeeInfo'
            required:
                - employee_list

        ErrorResponse:
            type: object
            additionalProperties: false
            properties:
                code:
                    type: string
                    description: Код ошибки
                    enum: 
                        - incorrect_time_format
                        - incorrect_table_count
                        - incorrect_price
                        - not_authorized
                        - already_exist
                        - access_denied
                        - user_not_found
                        - restaurant_not_found
                        - place_not_found
                        - dish_not_found
                message:
                    type: string
                    description: Описание ошибки
            required:
                - code
                - message

        # Objects
        PlaceInfo:
            type: object
            additionalProperties: false
            properties:
                uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор плейса
                address:
                    $ref: '#/components/schemas/Address'
                table_count:
                    $ref: '#/components/schemas/TableCount'
                opening_time:
                    $ref: '#/components/schemas/Time'
                closing_time:
                    $ref: '#/components/schemas/Time'
            required:
                - uuid
                - address
                - table_count
                - opening_time
                - closing_time

        EmployeeInfo:
            type: object
            additionalProperties: false
            properties:
                uuid:
                    type: string
                    format: uuid
                    description: Уникальный идентификатор пользователя
                login:
                    description: Логин пользователя, используемый для входа
                    $ref: '#/components/schemas/Login'
                tg_login:
                    description: Логин пользователя в Telegram
                    $ref: '#/components/schemas/Login'
                first_name:
                    description: Имя пользователя на латинице
                    $ref: '#/components/schemas/Name'
                last_name:
                    description: Фамилия пользователя на латинице
                    $ref: '#/components/schemas/Name'
                employee_role:
                    $ref: '#/components/schemas/Role'
            required:
                - uuid
                - login
                - tg_login
                - first_name
                - last_name
                - employee_role
        
        Address:
            type: string
            minLength: 1
            maxLength: 50
            pattern: "^[A-Za-z0-9 \\-]+$"
        
        TableCount:
            type: integer
            minimum: 0
            exclusiveMinimum: true

        Time:
            type: string
            pattern: '^([01][0-9]|2[0-3]):[0-5][0-9]$'

        Login:
            type: string
            description: Логин пользователя, используемый для входа
            pattern: "^[a-zA-Z][a-zA-Z0-9_]{4,31}$"
            minLength: 4
            maxLength: 31

        Role:
            type: string
            description: Роль сотрудника
            enum: 
                - admin
                - waiter

        Name:
            type: string
            minLength: 1
            maxLength: 50
            pattern: "^[A-Za-z \\-]+$"
