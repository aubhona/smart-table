openapi: 3.0.3
info:
    title: SmartTable Admin API
    version: 1.0.0
    description: API для управления рестораном.

paths:
    /admin/v1/restaurant/create:
        post:
            summary: Создание ресторана
            description: Создание ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantCreateRequest'
            responses:
                '200':
                    description: Успешное создание ресторана
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1RestaurantCreateResponse'
                '401':
                    description: Ошибка создания ресторана, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка создания ресторана, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка создания ресторана, пользователь не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/edit:
        post:
            summary: Редактирование ресторана
            description: Редактирование ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantEditRequest'
            responses:
                '204':
                    description: Успешное редактирование ресторана
                '401':
                    description: Ошибка редактирования ресторана, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка редактирование ресторана, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка редактирование ресторана, пользователь или ресторан не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/delete:
        post:
            summary: Удаление ресторана
            description: Удаление ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantDeleteRequest'
            responses:
                '204':
                    description: Успешное удаление ресторана
                '401':
                    description: Ошибка удаления ресторана, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка удаления ресторана, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка удаления ресторана, пользователь или ресторан не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/list:
        get:
            summary: Получение списка ресторанов пользователя
            description: Получение списка ресторанов пользователя
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            responses:
                '200':
                    description: Список ресторанов пользователя
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1RestaurantListResponse'
                '401':
                    description: Ошибка получения списка ресторанов, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка получения списка ресторанов, пользователь не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/dish/create:
        post:
            summary: Создание блюда ресторана
            description: Создание блюда ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantDishCreateRequest'
                        encoding:
                            dish_picture_file:
                                contentType: image/png
            responses:
                '200':
                    description: Успешное создание блюда
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1RestaurantDishCreateResponse'
                '400':
                    description: Некорректный запрос создания
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '401':
                    description: Ошибка создания, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка создания, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка создания, пользователь не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/dish/edit:
        post:
            summary: Редактирование блюда ресторана
            description: Редактирование блюда ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantDishEditRequest'
                        encoding:
                            dish_picture_file:
                                contentType: image/png
            responses:
                '204':
                    description: Успешное редактирование блюда
                '400':
                    description: Некорректный запрос редактирования
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '401':
                    description: Ошибка редактирования, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка редактирования, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка редактирования, пользователь или блюдо не найдены
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/dish/delete:
        post:
            summary: Удаление блюда ресторана
            description: Удаление блюда ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantDishDeleteRequest'
                        encoding:
                            dish_picture_file:
                                contentType: image/png
            responses:
                '204':
                    description: Успешное удаление блюда
                '400':
                    description: Некорректный запрос удаления
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '401':
                    description: Ошибка удаления, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка удаления, отказано в доступе, некорретные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка удаления, пользователь или блюдо не найдены
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/dish/list:
        post:
            summary: Получение списка блюд ресторана
            description: Получение списка блюд ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantDishListRequest'
            responses:
                '200':
                    description: Список блюд (JSON + binary images)
                    content:
                        multipart/mixed:
                            schema:
                                type: string
                                format: binary
                '401':
                    description: Ошибка получения списка, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка получения списка, отказано в доступе, некорректные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка получения списка, пользователь не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

    /admin/v1/restaurant/dish/info/list:
        post:
            summary: Получение списка блюд ресторана
            description: Получение списка блюд ресторана
            parameters:
                - $ref: '#/components/parameters/user_uuid'
                - $ref: '#/components/parameters/jwt_token'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminV1RestaurantDishListRequest'
            responses:
                '200':
                    description: Список блюд 
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AdminV1RestaurantDishInfoListResponse'
                '401':
                    description: Ошибка получения списка, пользователь не авторизован
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '403':
                    description: Ошибка получения списка, отказано в доступе, некорректные данные
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Ошибка получения списка, пользователь не найден
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

components:
    parameters:
        user_uuid:
            in: header
            name: User-UUID
            description: Уникальный идентификатор пользователя
            required: true
            schema:
                type: string
                format: uuid

        jwt_token:
            in: header
            name: JWT-Token
            description: jwt токен пользователя
            required: true
            schema:
                type: string

    schemas:
        # /admin/v1/restaurant/create_POST
        AdminV1RestaurantCreateRequest:
            type: object
            additionalProperties: false
            properties:
                restaurant_name:
                    $ref: '#/components/schemas/RestaurantName'
            required:
                - restaurant_name

        AdminV1RestaurantCreateResponse:
            type: object
            additionalProperties: false
            properties:
                restaurant_uuid:
                    $ref: '#/components/schemas/RestaurantUUID'
            required:
                - restaurant_uuid

        # /admin/v1/restaurant/edit_POST
        AdminV1RestaurantEditRequest:
            type: object
            additionalProperties: false
            properties:
                restaurant_name:
                    $ref: '#/components/schemas/RestaurantName'
                restaurant_uuid:
                    $ref: '#/components/schemas/RestaurantUUID'
            required:
                - restaurant_uuid
                - restaurant_name

        # /admin/v1/restaurant/delete_POST
        AdminV1RestaurantDeleteRequest:
            type: object
            additionalProperties: false
            properties:
                restaurant_uuid:
                    $ref: '#/components/schemas/RestaurantUUID'
            required:
                - restaurant_uuid

        # /admin/v1/restaurant/list_GET
        AdminV1RestaurantListResponse:
            type: object
            additionalProperties: false
            properties:
                restaurant_list:
                    type: array
                    items:
                        $ref: '#/components/schemas/RestaurantInfo'
            required:
                - restaurant_list

        # /admin/v1/restaurant/dish/create_POST
        AdminV1RestaurantDishCreateRequest:
            type: object
            additionalProperties: false
            properties:
                restaurant_uuid:
                    $ref: '#/components/schemas/RestaurantUUID'
                dish_name:
                    type: string
                description:
                    type: string
                category:
                    type: string
                calories:
                    type: integer
                    minimum: 0
                weight:
                    type: integer
                    minimum: 0
                dish_picture_file:
                    type: string
                    format: binary
            required:
                - restaurant_uuid
                - dish_name
                - description
                - category
                - calories
                - weight
                - dish_picture_file

        AdminV1RestaurantDishCreateResponse:
            type: object
            additionalProperties: false
            properties:
                dish_uuid:
                    type: string
                    format: uuid
            required:
                - dish_uuid

        # /admin/v1/restaurant/dish/edit_POST
        AdminV1RestaurantDishEditRequest:
            type: object
            additionalProperties: false
            properties:
                dish_uuid:
                    $ref: '#/components/schemas/DishUUID'
                dish_name:
                    type: string
                description:
                    type: string
                category:
                    type: string
                calories:
                    type: integer
                    minimum: 0
                weight:
                    type: integer
                    minimum: 0
                dish_picture_file:
                    type: string
                    format: binary
            required:
                - dish_uuid
                - restaurant_uuid
                - dish_name
                - description
                - category
                - calories
                - weight
                - dish_picture_file
            
        # /admin/v1/restaurant/dish/delete_POST
        AdminV1RestaurantDishDeleteRequest:
            type: object
            additionalProperties: false
            properties:
                dish_uuid:
                    $ref: '#/components/schemas/DishUUID'
            required:
                - dish_uuid

        # /admin/v1/restaurant/dish/list_POST
        AdminV1RestaurantDishListRequest:
            type: object
            additionalProperties: false
            properties:
                restaurant_uuid:
                    $ref: '#/components/schemas/RestaurantUUID'
            required:
                - restaurant_uuid

        # /admin/v1/restaurant/dish/info/list_POST
        AdminV1RestaurantDishInfoListResponse:
            type: object
            additionalProperties: false
            properties:
                dish_list:
                    description: Cписок блюд ресторана
                    type: array
                    items:
                        $ref: '#/components/schemas/DishInfo'
            required:
                - dish_list

        # Errors
        ErrorResponse:
            type: object
            additionalProperties: false
            properties:
                code:
                    type: string
                    description: Код ошибки
                    enum: 
                        - not_authorized
                        - already_exist
                        - user_not_found
                        - invalid_request
                        - restaurant_not_found
                        - access_denied
                message:
                    type: string
                    description: Описание ошибки
            required:
                - code
                - message

        # Objects
        RestaurantInfo:
            type: object
            additionalProperties: false
            properties:
                uuid:
                    $ref: '#/components/schemas/RestaurantUUID'
                name:
                    $ref: '#/components/schemas/RestaurantName'
            required:
                - uuid
                - name

        RestaurantUUID:
            type: string
            format: uuid
            description: Уникальный идентификатор ресторана

        DishUUID:
            type: string
            format: uuid
            description: Уникальный идентификатор блюда
        
        RestaurantName:
            type: string
            description: Назавние ресторана на латинице
            minLength: 1
            maxLength: 50
            pattern: "^[A-Za-z0-9 \\-]+$"

        DishInfo:
            type: object
            additionalProperties: false
            properties:
                id:
                    type: string
                    format: uuid
                name:
                    type: string
                description:
                    type: string
                calories:
                    type: integer
                weight:
                    type: integer
                category:
                    type: string
                picture_key:
                    type: string
            required:
                - id
                - name
                - description
                - calories
                - weight
                - category
                - picture_key
