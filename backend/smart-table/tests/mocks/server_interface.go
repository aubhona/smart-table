// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// ServerInterface is an autogenerated mock type for the ServerInterface type
type ServerInterface struct {
	mock.Mock
}

type ServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *ServerInterface) EXPECT() *ServerInterface_Expecter {
	return &ServerInterface_Expecter{mock: &_m.Mock}
}

// PostAdminV1UserSignIn provides a mock function with given fields: c
func (_m *ServerInterface) PostAdminV1UserSignIn(c *gin.Context) {
	_m.Called(c)
}

// ServerInterface_PostAdminV1UserSignIn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PostAdminV1UserSignIn'
type ServerInterface_PostAdminV1UserSignIn_Call struct {
	*mock.Call
}

// PostAdminV1UserSignIn is a helper method to define mock.On call
//   - c *gin.Context
func (_e *ServerInterface_Expecter) PostAdminV1UserSignIn(c interface{}) *ServerInterface_PostAdminV1UserSignIn_Call {
	return &ServerInterface_PostAdminV1UserSignIn_Call{Call: _e.mock.On("PostAdminV1UserSignIn", c)}
}

func (_c *ServerInterface_PostAdminV1UserSignIn_Call) Run(run func(c *gin.Context)) *ServerInterface_PostAdminV1UserSignIn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *ServerInterface_PostAdminV1UserSignIn_Call) Return() *ServerInterface_PostAdminV1UserSignIn_Call {
	_c.Call.Return()
	return _c
}

func (_c *ServerInterface_PostAdminV1UserSignIn_Call) RunAndReturn(run func(*gin.Context)) *ServerInterface_PostAdminV1UserSignIn_Call {
	_c.Run(run)
	return _c
}

// PostAdminV1UserSignUp provides a mock function with given fields: c
func (_m *ServerInterface) PostAdminV1UserSignUp(c *gin.Context) {
	_m.Called(c)
}

// ServerInterface_PostAdminV1UserSignUp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PostAdminV1UserSignUp'
type ServerInterface_PostAdminV1UserSignUp_Call struct {
	*mock.Call
}

// PostAdminV1UserSignUp is a helper method to define mock.On call
//   - c *gin.Context
func (_e *ServerInterface_Expecter) PostAdminV1UserSignUp(c interface{}) *ServerInterface_PostAdminV1UserSignUp_Call {
	return &ServerInterface_PostAdminV1UserSignUp_Call{Call: _e.mock.On("PostAdminV1UserSignUp", c)}
}

func (_c *ServerInterface_PostAdminV1UserSignUp_Call) Run(run func(c *gin.Context)) *ServerInterface_PostAdminV1UserSignUp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *ServerInterface_PostAdminV1UserSignUp_Call) Return() *ServerInterface_PostAdminV1UserSignUp_Call {
	_c.Call.Return()
	return _c
}

func (_c *ServerInterface_PostAdminV1UserSignUp_Call) RunAndReturn(run func(*gin.Context)) *ServerInterface_PostAdminV1UserSignUp_Call {
	_c.Run(run)
	return _c
}

// NewServerInterface creates a new instance of ServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerInterface {
	mock := &ServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
