// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: check_login_or_tg_login_exist.sql

package db

import (
	"context"
)

const checkLoginOrTgLoginExist = `-- name: CheckLoginOrTgLoginExist :one

SELECT EXISTS (
    SELECT 1
    FROM 
        smart_table_admin.users u 
    WHERE 
        u.login = $1::TEXT
        OR u.tg_login = $2::TEXT
) AS user_exists
`

type CheckLoginOrTgLoginExistParams struct {
	Column1 string
	Column2 string
}

// args:
// $1 - TEXT (login)
// $2 - TEXT (tg_login)
func (q *Queries) CheckLoginOrTgLoginExist(ctx context.Context, arg CheckLoginOrTgLoginExistParams) (bool, error) {
	row := q.db.QueryRow(ctx, checkLoginOrTgLoginExist, arg.Column1, arg.Column2)
	var user_exists bool
	err := row.Scan(&user_exists)
	return user_exists, err
}
