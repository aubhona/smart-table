// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: upsert_customer.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const upsertCustomer = `-- name: UpsertCustomer :one

INSERT INTO smart_table_customer.customers (
    uuid,
    tg_id,
    tg_login,
    avatar_link,
    chat_id,
    created_at,
    updated_at
)
SELECT
    input.uuid,
    input.tg_id,
    input.tg_login,
    input.avatar_link,
    input.chat_id,
    input.created_at,
    input.updated_at
FROM jsonb_to_record($1::jsonb) AS input(
   uuid         UUID,
   tg_id        TEXT,
   tg_login     TEXT,
   avatar_link  TEXT,
   chat_id      TEXT,
   created_at   TIMESTAMPTZ,
   updated_at   TIMESTAMPTZ
) ON CONFLICT (tg_id) DO UPDATE
SET
    chat_id = EXCLUDED.chat_id
RETURNING uuid
`

// args:
// $1 - JSONB
func (q *Queries) UpsertCustomer(ctx context.Context, dollar_1 []byte) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, upsertCustomer, dollar_1)
	var uuid uuid.UUID
	err := row.Scan(&uuid)
	return uuid, err
}
