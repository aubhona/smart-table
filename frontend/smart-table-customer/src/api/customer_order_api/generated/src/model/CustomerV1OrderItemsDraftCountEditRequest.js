/**
 * SmartTable Mobile API
 * API для управления заказами.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomerV1OrderItemsDraftCountEditRequest model module.
 * @module model/CustomerV1OrderItemsDraftCountEditRequest
 * @version 1.0.0
 */
class CustomerV1OrderItemsDraftCountEditRequest {
    /**
     * Constructs a new <code>CustomerV1OrderItemsDraftCountEditRequest</code>.
     * @alias module:model/CustomerV1OrderItemsDraftCountEditRequest
     * @param menuDishUuid {String} Уникальный идентификатор блюда в меню
     * @param count {Number} Добавляемое количество блюд
     */
    constructor(menuDishUuid, count) { 
        
        CustomerV1OrderItemsDraftCountEditRequest.initialize(this, menuDishUuid, count);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, menuDishUuid, count) { 
        obj['menu_dish_uuid'] = menuDishUuid;
        obj['count'] = count;
    }

    /**
     * Constructs a <code>CustomerV1OrderItemsDraftCountEditRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerV1OrderItemsDraftCountEditRequest} obj Optional instance to populate.
     * @return {module:model/CustomerV1OrderItemsDraftCountEditRequest} The populated <code>CustomerV1OrderItemsDraftCountEditRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerV1OrderItemsDraftCountEditRequest();

            if (data.hasOwnProperty('menu_dish_uuid')) {
                obj['menu_dish_uuid'] = ApiClient.convertToType(data['menu_dish_uuid'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerV1OrderItemsDraftCountEditRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerV1OrderItemsDraftCountEditRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerV1OrderItemsDraftCountEditRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['menu_dish_uuid'] && !(typeof data['menu_dish_uuid'] === 'string' || data['menu_dish_uuid'] instanceof String)) {
            throw new Error("Expected the field `menu_dish_uuid` to be a primitive type in the JSON string but got " + data['menu_dish_uuid']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }

        return true;
    }


}

CustomerV1OrderItemsDraftCountEditRequest.RequiredProperties = ["menu_dish_uuid", "count"];

/**
 * Уникальный идентификатор блюда в меню
 * @member {String} menu_dish_uuid
 */
CustomerV1OrderItemsDraftCountEditRequest.prototype['menu_dish_uuid'] = undefined;

/**
 * Добавляемое количество блюд
 * @member {Number} count
 */
CustomerV1OrderItemsDraftCountEditRequest.prototype['count'] = undefined;

/**
 * @member {String} comment
 */
CustomerV1OrderItemsDraftCountEditRequest.prototype['comment'] = undefined;






export default CustomerV1OrderItemsDraftCountEditRequest;

