{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kurma\\\\Documents\\\\Documents\\\\smart-table\\\\src\\\\index.js\";\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport { initMiniApp, mockTelegramEnv, parseInitData } from '@telegram-apps/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initializeTelegramSDK = async () => {\n  try {\n    // Попытка инициализировать настоящее окружение Telegram\n    console.log(\"Инициализация окружения Telegram\");\n    const [miniApp] = initMiniApp();\n    await miniApp.ready();\n    miniApp.setHeaderColor('#fcb69f');\n  } catch (error) {\n    // В случае ошибки инициализируем фейковое окружение\n    console.error('Ошибка при инициализации Telegram:', error);\n    const initDataRaw = new URLSearchParams([['user', JSON.stringify({\n      id: 99281932,\n      first_name: 'Andrew',\n      last_name: 'Rogue',\n      username: 'rogue',\n      language_code: 'en',\n      is_premium: true,\n      allows_write_to_pm: true\n    })], ['hash', '89d6079ad6762351f38c6dbbc41bb53048019256a9443988af7a48bcad16ba31'], ['auth_date', '1716922846'], ['start_param', 'debug'], ['chat_type', 'sender'], ['chat_instance', '8428209589180549439']]).toString();\n    mockTelegramEnv({\n      themeParams: {\n        accentTextColor: '#6ab2f2',\n        bgColor: '#17212b',\n        buttonColor: '#5288c1',\n        buttonTextColor: '#ffffff',\n        destructiveTextColor: '#ec3942',\n        headerBgColor: '#fcb69f',\n        hintColor: '#708499',\n        linkColor: '#6ab3f3',\n        secondaryBgColor: '#232e3c',\n        sectionBgColor: '#17212b',\n        sectionHeaderTextColor: '#6ab3f3',\n        subtitleTextColor: '#708499',\n        textColor: '#f5f5f5'\n      },\n      initData: parseInitData(initDataRaw),\n      initDataRaw,\n      version: '7.2',\n      platform: 'tdesktop'\n    });\n    console.log('Mock Telegram environment initialized');\n  }\n};\n\n// Инициализация SDK\ninitializeTelegramSDK();\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","createRoot","App","initMiniApp","mockTelegramEnv","parseInitData","jsxDEV","_jsxDEV","initializeTelegramSDK","console","log","miniApp","ready","setHeaderColor","error","initDataRaw","URLSearchParams","JSON","stringify","id","first_name","last_name","username","language_code","is_premium","allows_write_to_pm","toString","themeParams","accentTextColor","bgColor","buttonColor","buttonTextColor","destructiveTextColor","headerBgColor","hintColor","linkColor","secondaryBgColor","sectionBgColor","sectionHeaderTextColor","subtitleTextColor","textColor","initData","version","platform","container","document","getElementById","root","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/kurma/Documents/Documents/smart-table/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport { initMiniApp, mockTelegramEnv, parseInitData } from '@telegram-apps/sdk';\n\nconst initializeTelegramSDK = async () => {\n  try {\n    // Попытка инициализировать настоящее окружение Telegram\n    console.log(\"Инициализация окружения Telegram\");\n    const [miniApp] = initMiniApp();\n    await miniApp.ready();\n    miniApp.setHeaderColor('#fcb69f');\n  } catch (error) {\n    // В случае ошибки инициализируем фейковое окружение\n    console.error('Ошибка при инициализации Telegram:', error);\n\n    const initDataRaw = new URLSearchParams([\n      ['user', JSON.stringify({\n        id: 99281932,\n        first_name: 'Andrew',\n        last_name: 'Rogue',\n        username: 'rogue',\n        language_code: 'en',\n        is_premium: true,\n        allows_write_to_pm: true,\n      })],\n      ['hash', '89d6079ad6762351f38c6dbbc41bb53048019256a9443988af7a48bcad16ba31'],\n      ['auth_date', '1716922846'],\n      ['start_param', 'debug'],\n      ['chat_type', 'sender'],\n      ['chat_instance', '8428209589180549439'],\n    ]).toString();\n\n    mockTelegramEnv({\n      themeParams: {\n        accentTextColor: '#6ab2f2',\n        bgColor: '#17212b',\n        buttonColor: '#5288c1',\n        buttonTextColor: '#ffffff',\n        destructiveTextColor: '#ec3942',\n        headerBgColor: '#fcb69f',\n        hintColor: '#708499',\n        linkColor: '#6ab3f3',\n        secondaryBgColor: '#232e3c',\n        sectionBgColor: '#17212b',\n        sectionHeaderTextColor: '#6ab3f3',\n        subtitleTextColor: '#708499',\n        textColor: '#f5f5f5',\n      },\n      initData: parseInitData(initDataRaw),\n      initDataRaw,\n      version: '7.2',\n      platform: 'tdesktop',\n    });\n\n    console.log('Mock Telegram environment initialized');\n  }\n};\n\n// Инициализация SDK\ninitializeTelegramSDK();\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,WAAW,EAAEC,eAAe,EAAEC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF;IACAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,MAAM,CAACC,OAAO,CAAC,GAAGR,WAAW,CAAC,CAAC;IAC/B,MAAMQ,OAAO,CAACC,KAAK,CAAC,CAAC;IACrBD,OAAO,CAACE,cAAc,CAAC,SAAS,CAAC;EACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAL,OAAO,CAACK,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAE1D,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAAC,CACtC,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;MACtBC,EAAE,EAAE,QAAQ;MACZC,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAE,OAAO;MAClBC,QAAQ,EAAE,OAAO;MACjBC,aAAa,EAAE,IAAI;MACnBC,UAAU,EAAE,IAAI;MAChBC,kBAAkB,EAAE;IACtB,CAAC,CAAC,CAAC,EACH,CAAC,MAAM,EAAE,kEAAkE,CAAC,EAC5E,CAAC,WAAW,EAAE,YAAY,CAAC,EAC3B,CAAC,aAAa,EAAE,OAAO,CAAC,EACxB,CAAC,WAAW,EAAE,QAAQ,CAAC,EACvB,CAAC,eAAe,EAAE,qBAAqB,CAAC,CACzC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAEbtB,eAAe,CAAC;MACduB,WAAW,EAAE;QACXC,eAAe,EAAE,SAAS;QAC1BC,OAAO,EAAE,SAAS;QAClBC,WAAW,EAAE,SAAS;QACtBC,eAAe,EAAE,SAAS;QAC1BC,oBAAoB,EAAE,SAAS;QAC/BC,aAAa,EAAE,SAAS;QACxBC,SAAS,EAAE,SAAS;QACpBC,SAAS,EAAE,SAAS;QACpBC,gBAAgB,EAAE,SAAS;QAC3BC,cAAc,EAAE,SAAS;QACzBC,sBAAsB,EAAE,SAAS;QACjCC,iBAAiB,EAAE,SAAS;QAC5BC,SAAS,EAAE;MACb,CAAC;MACDC,QAAQ,EAAEpC,aAAa,CAACU,WAAW,CAAC;MACpCA,WAAW;MACX2B,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEFlC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;EACtD;AACF,CAAC;;AAED;AACAF,qBAAqB,CAAC,CAAC;AAEvB,MAAMoC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,MAAMC,IAAI,GAAG9C,UAAU,CAAC2C,SAAS,CAAC;AAElCG,IAAI,CAACC,MAAM,cACTzC,OAAA,CAACP,KAAK,CAACiD,UAAU;EAAAC,QAAA,eACf3C,OAAA,CAACL,GAAG;IAAAiD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}