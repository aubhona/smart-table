{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kurma\\\\Documents\\\\Documents\\\\smart-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateDeck = () => {\n  const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700', '#FF69B4', '#8A2BE2'];\n  const deck = [];\n  // Каждому цвету добавляем две карточки\n  for (let color of colors) {\n    deck.push({\n      color,\n      matched: false\n    });\n    deck.push({\n      color,\n      matched: false\n    });\n  }\n  // Перемешиваем колоду\n  return deck.sort(() => Math.random() - 0.5);\n};\nconst initialState = {\n  deck: generateDeck(),\n  flipped: [],\n  matched: [],\n  turns: 0,\n  score: 0,\n  pendingReset: false,\n  gameOver: false\n};\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'FLIP_CARD':\n      // Переворачиваем карточку\n      if (state.flipped.length < 2 && !state.flipped.includes(action.index) && !state.matched.includes(state.deck[action.index].color)) {\n        return {\n          ...state,\n          flipped: [...state.flipped, action.index]\n        };\n      }\n      return state;\n    case 'CHECK_MATCH':\n      // Проверяем совпадение перевернутых карточек\n      const [first, second] = state.flipped;\n      if (state.deck[first].color === state.deck[second].color) {\n        const newMatched = [...state.matched, state.deck[first].color];\n        const isGameOver = newMatched.length === state.deck.length / 2;\n        return {\n          ...state,\n          matched: newMatched,\n          score: isGameOver ? state.score + 1 : state.score,\n          flipped: [],\n          pendingReset: false,\n          gameOver: isGameOver\n        };\n      } else {\n        return {\n          ...state,\n          pendingReset: true\n        };\n      }\n    case 'RESET_FLIPPED':\n      // Сбрасываем перевернутые карточки\n      return {\n        ...state,\n        flipped: [],\n        pendingReset: false\n      };\n    case 'INCREMENT_TURN':\n      // Увеличиваем счетчик попыток\n      return {\n        ...state,\n        turns: state.turns + 1\n      };\n    case 'RESET_GAME':\n      // Сбрасываем состояние игры\n      return {\n        ...initialState,\n        deck: generateDeck()\n      };\n    default:\n      return state;\n  }\n};\nconst App = () => {\n  _s();\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n\n  // Проверка на совпадение перевернутых карточек\n  useEffect(() => {\n    if (state.flipped.length === 2) {\n      dispatch({\n        type: 'CHECK_MATCH'\n      });\n      dispatch({\n        type: 'INCREMENT_TURN'\n      });\n    }\n  }, [state.flipped]);\n\n  // Таймер для сброса перевернутых карточек\n  useEffect(() => {\n    if (state.pendingReset) {\n      const timer = setTimeout(() => {\n        dispatch({\n          type: 'RESET_FLIPPED'\n        });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [state.pendingReset]);\n\n  // Обработка клика на карточку\n  const handleCardClick = index => {\n    if (!state.gameOver && state.flipped.length < 2 && !state.flipped.includes(index)) {\n      dispatch({\n        type: 'FLIP_CARD',\n        index\n      });\n    }\n  };\n  const handlePlayAgain = () => {\n    dispatch({\n      type: 'RESET_GAME'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0447\\u043A\\u0438: \", state.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0438: \", state.turns, \"/15\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: state.deck.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${state.flipped.includes(index) || state.matched.includes(card.color) ? 'flipped show' : ''}`,\n        style: {\n          '--card-color': card.color\n        },\n        onClick: () => handleCardClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), state.gameOver && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B \\u0432\\u044B\\u0438\\u0433\\u0440\\u0430\\u043B\\u0438!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayAgain,\n          children: \"\\u0417\\u0430\\u043D\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !state.gameOver && state.turns >= 15 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0418\\u0433\\u0440\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0435\\u043D\\u0430!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayAgain,\n          children: \"\\u0417\\u0430\\u043D\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useReducer","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","generateDeck","colors","deck","color","push","matched","sort","Math","random","initialState","flipped","turns","score","pendingReset","gameOver","gameReducer","state","action","type","length","includes","index","first","second","newMatched","isGameOver","App","_s","dispatch","timer","setTimeout","clearTimeout","handleCardClick","handlePlayAgain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kurma/Documents/Documents/smart-table/src/App.js"],"sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport './App.css';\n\nconst generateDeck = () => {\n  const colors = ['#FF6347', '#4682B4', '#32CD32', '#FFD700', '#FF69B4', '#8A2BE2'];\n  const deck = [];\n  // Каждому цвету добавляем две карточки\n  for (let color of colors) {\n    deck.push({ color, matched: false });\n    deck.push({ color, matched: false });\n  }\n  // Перемешиваем колоду\n  return deck.sort(() => Math.random() - 0.5);\n};\n\nconst initialState = {\n  deck: generateDeck(),\n  flipped: [],\n  matched: [],\n  turns: 0,\n  score: 0,\n  pendingReset: false,\n  gameOver: false,\n};\n\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'FLIP_CARD':\n      // Переворачиваем карточку\n      if (state.flipped.length < 2 && !state.flipped.includes(action.index) && !state.matched.includes(state.deck[action.index].color)) {\n        return { ...state, flipped: [...state.flipped, action.index] };\n      }\n      return state;\n    case 'CHECK_MATCH':\n      // Проверяем совпадение перевернутых карточек\n      const [first, second] = state.flipped;\n      if (state.deck[first].color === state.deck[second].color) {\n        const newMatched = [...state.matched, state.deck[first].color];\n        const isGameOver = newMatched.length === state.deck.length / 2;\n        return {\n          ...state,\n          matched: newMatched,\n          score: isGameOver ? state.score + 1 : state.score,\n          flipped: [],\n          pendingReset: false,\n          gameOver: isGameOver,\n        };\n      } else {\n        return { ...state, pendingReset: true };\n      }\n    case 'RESET_FLIPPED':\n      // Сбрасываем перевернутые карточки\n      return { ...state, flipped: [], pendingReset: false };\n    case 'INCREMENT_TURN':\n      // Увеличиваем счетчик попыток\n      return { ...state, turns: state.turns + 1 };\n    case 'RESET_GAME':\n      // Сбрасываем состояние игры\n      return {\n        ...initialState,\n        deck: generateDeck(),\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n\n  // Проверка на совпадение перевернутых карточек\n  useEffect(() => {\n    if (state.flipped.length === 2) {\n      dispatch({ type: 'CHECK_MATCH' });\n      dispatch({ type: 'INCREMENT_TURN' });\n    }\n  }, [state.flipped]);\n\n  // Таймер для сброса перевернутых карточек\n  useEffect(() => {\n    if (state.pendingReset) {\n      const timer = setTimeout(() => {\n        dispatch({ type: 'RESET_FLIPPED' });\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [state.pendingReset]);\n\n  // Обработка клика на карточку\n  const handleCardClick = (index) => {\n    if (!state.gameOver && state.flipped.length < 2 && !state.flipped.includes(index)) {\n      dispatch({ type: 'FLIP_CARD', index });\n    }\n  };\n\n  const handlePlayAgain = () => {\n    dispatch({ type: 'RESET_GAME' });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <div className=\"info\">\n        <p>Очки: {state.score}</p>\n        <p>Попытки: {state.turns}/15</p>\n      </div>\n      <div className=\"deck\">\n        {state.deck.map((card, index) => (\n          <div\n            key={index}\n            className={`card ${state.flipped.includes(index) || state.matched.includes(card.color) ? 'flipped show' : ''}`}\n            style={{ '--card-color': card.color }}\n            onClick={() => handleCardClick(index)}\n          />\n        ))}\n      </div>\n      {state.gameOver && (\n        <>\n          <div className=\"overlay\" />\n          <div className=\"game-over\">\n            <h2>Вы выиграли!</h2>\n            <button onClick={handlePlayAgain}>Заново</button>\n          </div>\n        </>\n      )}\n      {!state.gameOver && state.turns >= 15 && (\n        <>\n          <div className=\"overlay\" />\n          <div className=\"game-over\">\n            <h2>Игра окончена!</h2>\n            <button onClick={handlePlayAgain}>Заново</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}