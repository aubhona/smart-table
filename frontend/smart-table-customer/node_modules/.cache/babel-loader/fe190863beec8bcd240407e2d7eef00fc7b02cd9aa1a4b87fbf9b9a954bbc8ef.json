{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kurma\\\\Documents\\\\Documents\\\\smart-table\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tableId, setTableId] = useState('');\n  const [error, setError] = useState('');\n\n  // Проверка на корректность ID (например, только цифры и длина 6)\n  const validateTableId = id => {\n    const isValid = /^\\d{6}$/.test(id); // Только 6 цифр\n    if (!isValid) {\n      setError('ID должен содержать 6 цифр');\n    } else {\n      setError('');\n    }\n    return isValid;\n  };\n  const handleChange = event => {\n    setTableId(event.target.value);\n    setError(''); // Убираем ошибку при изменении\n  };\n  const handleSubmit = () => {\n    if (validateTableId(tableId)) {\n      alert(`Проверка успешна! Table ID: ${tableId}`);\n      // Здесь можно сделать редирект или отправить данные на сервер\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 Table ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 table ID\",\n      value: tableId,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DpWwZo6MtXvg0UJbvyL8Llga6mo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tableId","setTableId","error","setError","validateTableId","id","isValid","test","handleChange","event","target","value","handleSubmit","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kurma/Documents/Documents/smart-table/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [tableId, setTableId] = useState('');\n  const [error, setError] = useState('');\n\n  // Проверка на корректность ID (например, только цифры и длина 6)\n  const validateTableId = (id) => {\n    const isValid = /^\\d{6}$/.test(id); // Только 6 цифр\n    if (!isValid) {\n      setError('ID должен содержать 6 цифр');\n    } else {\n      setError('');\n    }\n    return isValid;\n  };\n\n  const handleChange = (event) => {\n    setTableId(event.target.value);\n    setError(''); // Убираем ошибку при изменении\n  };\n\n  const handleSubmit = () => {\n    if (validateTableId(tableId)) {\n      alert(`Проверка успешна! Table ID: ${tableId}`);\n      // Здесь можно сделать редирект или отправить данные на сервер\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Введите Table ID</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Введите table ID\"\n        value={tableId}\n        onChange={handleChange}\n      />\n      <button onClick={handleSubmit}>Подтвердить</button>\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMS,eAAe,GAAIC,EAAE,IAAK;IAC9B,MAAMC,OAAO,GAAG,SAAS,CAACC,IAAI,CAACF,EAAE,CAAC,CAAC,CAAC;IACpC,IAAI,CAACC,OAAO,EAAE;MACZH,QAAQ,CAAC,4BAA4B,CAAC;IACxC,CAAC,MAAM;MACLA,QAAQ,CAAC,EAAE,CAAC;IACd;IACA,OAAOG,OAAO;EAChB,CAAC;EAED,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9BR,UAAU,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIR,eAAe,CAACJ,OAAO,CAAC,EAAE;MAC5Ba,KAAK,CAAC,+BAA+Bb,OAAO,EAAE,CAAC;MAC/C;IACF;EACF,CAAC;EAED,oBACEH,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,qDAAkB;MAC9BV,KAAK,EAAEX,OAAQ;MACfsB,QAAQ,EAAEd;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFtB,OAAA;MAAQ0B,OAAO,EAAEX,YAAa;MAAAG,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDjB,KAAK,iBAAIL,OAAA;MAAGiB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACpB,EAAA,CAxCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}