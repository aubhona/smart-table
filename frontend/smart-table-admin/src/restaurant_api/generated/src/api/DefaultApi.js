/**
 * SmartTable Mobile API
 * API для управления заказами.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdminV1RestaurantCreate401ErrorResponse from '../model/AdminV1RestaurantCreate401ErrorResponse';
import AdminV1RestaurantCreate403ErrorResponse from '../model/AdminV1RestaurantCreate403ErrorResponse';
import AdminV1RestaurantCreateRequest from '../model/AdminV1RestaurantCreateRequest';
import AdminV1RestaurantCreateResponse from '../model/AdminV1RestaurantCreateResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adminV1RestaurantCreatePost operation.
     * @callback module:api/DefaultApi~adminV1RestaurantCreatePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdminV1RestaurantCreateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Создание ресторана
     * Создание ресторана
     * @param {String} userUUID Уникальный идентификатор пользователя
     * @param {module:model/AdminV1RestaurantCreateRequest} adminV1RestaurantCreateRequest 
     * @param {module:api/DefaultApi~adminV1RestaurantCreatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdminV1RestaurantCreateResponse}
     */
    adminV1RestaurantCreatePost(userUUID, adminV1RestaurantCreateRequest, callback) {
      let postBody = adminV1RestaurantCreateRequest;
      // verify the required parameter 'userUUID' is set
      if (userUUID === undefined || userUUID === null) {
        throw new Error("Missing the required parameter 'userUUID' when calling adminV1RestaurantCreatePost");
      }
      // verify the required parameter 'adminV1RestaurantCreateRequest' is set
      if (adminV1RestaurantCreateRequest === undefined || adminV1RestaurantCreateRequest === null) {
        throw new Error("Missing the required parameter 'adminV1RestaurantCreateRequest' when calling adminV1RestaurantCreatePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-UUID': userUUID
      };
      let formParams = {
      };

      let authNames = ['CookieAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdminV1RestaurantCreateResponse;
      return this.apiClient.callApi(
        '/admin/v1/restaurant/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
