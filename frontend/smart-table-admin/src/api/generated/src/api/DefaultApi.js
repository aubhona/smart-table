/**
 * SmartTable Mobile API
 * API для управления заказами.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AdminV1UserSignIn403ErrorResponse from '../model/AdminV1UserSignIn403ErrorResponse';
import AdminV1UserSignInRequest from '../model/AdminV1UserSignInRequest';
import AdminV1UserSignInResponse from '../model/AdminV1UserSignInResponse';
import AdminV1UserSignUp409ErrorResponse from '../model/AdminV1UserSignUp409ErrorResponse';
import AdminV1UserSignUpRequest from '../model/AdminV1UserSignUpRequest';
import AdminV1UserSignUpResponse from '../model/AdminV1UserSignUpResponse';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adminV1UserSignInPost operation.
     * @callback module:api/DefaultApi~adminV1UserSignInPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdminV1UserSignInResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Авторизация пользователя в админке
     * Авторизует пользователя в админке
     * @param {module:model/AdminV1UserSignInRequest} adminV1UserSignInRequest 
     * @param {module:api/DefaultApi~adminV1UserSignInPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdminV1UserSignInResponse}
     */
    adminV1UserSignInPost(adminV1UserSignInRequest, callback) {
      let postBody = adminV1UserSignInRequest;
      // verify the required parameter 'adminV1UserSignInRequest' is set
      if (adminV1UserSignInRequest === undefined || adminV1UserSignInRequest === null) {
        throw new Error("Missing the required parameter 'adminV1UserSignInRequest' when calling adminV1UserSignInPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdminV1UserSignInResponse;
      return this.apiClient.callApi(
        '/admin/v1/user/sign-in', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the adminV1UserSignUpPost operation.
     * @callback module:api/DefaultApi~adminV1UserSignUpPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AdminV1UserSignUpResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Регистрация пользователя в админке
     * Регистрирует пользователя в админке
     * @param {module:model/AdminV1UserSignUpRequest} adminV1UserSignUpRequest 
     * @param {module:api/DefaultApi~adminV1UserSignUpPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AdminV1UserSignUpResponse}
     */
    adminV1UserSignUpPost(adminV1UserSignUpRequest, callback) {
      let postBody = adminV1UserSignUpRequest;
      // verify the required parameter 'adminV1UserSignUpRequest' is set
      if (adminV1UserSignUpRequest === undefined || adminV1UserSignUpRequest === null) {
        throw new Error("Missing the required parameter 'adminV1UserSignUpRequest' when calling adminV1UserSignUpPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AdminV1UserSignUpResponse;
      return this.apiClient.callApi(
        '/admin/v1/user/sign-up', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
