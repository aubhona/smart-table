/**
 * SmartTable Admin API
 * API для управления плейсом.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PlaceInfo model module.
 * @module model/PlaceInfo
 * @version 1.0.0
 */
class PlaceInfo {
    /**
     * Constructs a new <code>PlaceInfo</code>.
     * @alias module:model/PlaceInfo
     * @param uuid {String} Уникальный идентификатор плейса
     * @param address {String} 
     * @param tableCount {Number} 
     * @param openingTime {String} 
     * @param closingTime {String} 
     */
    constructor(uuid, address, tableCount, openingTime, closingTime) { 
        
        PlaceInfo.initialize(this, uuid, address, tableCount, openingTime, closingTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, uuid, address, tableCount, openingTime, closingTime) { 
        obj['uuid'] = uuid;
        obj['address'] = address;
        obj['table_count'] = tableCount;
        obj['opening_time'] = openingTime;
        obj['closing_time'] = closingTime;
    }

    /**
     * Constructs a <code>PlaceInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlaceInfo} obj Optional instance to populate.
     * @return {module:model/PlaceInfo} The populated <code>PlaceInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlaceInfo();

            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('table_count')) {
                obj['table_count'] = ApiClient.convertToType(data['table_count'], 'Number');
            }
            if (data.hasOwnProperty('opening_time')) {
                obj['opening_time'] = ApiClient.convertToType(data['opening_time'], 'String');
            }
            if (data.hasOwnProperty('closing_time')) {
                obj['closing_time'] = ApiClient.convertToType(data['closing_time'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlaceInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlaceInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PlaceInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['opening_time'] && !(typeof data['opening_time'] === 'string' || data['opening_time'] instanceof String)) {
            throw new Error("Expected the field `opening_time` to be a primitive type in the JSON string but got " + data['opening_time']);
        }
        // ensure the json data is a string
        if (data['closing_time'] && !(typeof data['closing_time'] === 'string' || data['closing_time'] instanceof String)) {
            throw new Error("Expected the field `closing_time` to be a primitive type in the JSON string but got " + data['closing_time']);
        }

        return true;
    }


}

PlaceInfo.RequiredProperties = ["uuid", "address", "table_count", "opening_time", "closing_time"];

/**
 * Уникальный идентификатор плейса
 * @member {String} uuid
 */
PlaceInfo.prototype['uuid'] = undefined;

/**
 * @member {String} address
 */
PlaceInfo.prototype['address'] = undefined;

/**
 * @member {Number} table_count
 */
PlaceInfo.prototype['table_count'] = undefined;

/**
 * @member {String} opening_time
 */
PlaceInfo.prototype['opening_time'] = undefined;

/**
 * @member {String} closing_time
 */
PlaceInfo.prototype['closing_time'] = undefined;






export default PlaceInfo;

