/**
 * SmartTable Admin API
 * API для управления плейсом.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ItemStatus from './ItemStatus';

/**
 * The ItemEditGroup model module.
 * @module model/ItemEditGroup
 * @version 1.0.0
 */
class ItemEditGroup {
    /**
     * Constructs a new <code>ItemEditGroup</code>.
     * @alias module:model/ItemEditGroup
     * @param itemUuidList {Array.<String>} Список идентификаторов позиций
     * @param itemStatus {module:model/ItemStatus} 
     */
    constructor(itemUuidList, itemStatus) { 
        
        ItemEditGroup.initialize(this, itemUuidList, itemStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, itemUuidList, itemStatus) { 
        obj['item_uuid_list'] = itemUuidList;
        obj['item_status'] = itemStatus;
    }

    /**
     * Constructs a <code>ItemEditGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItemEditGroup} obj Optional instance to populate.
     * @return {module:model/ItemEditGroup} The populated <code>ItemEditGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItemEditGroup();

            if (data.hasOwnProperty('item_uuid_list')) {
                obj['item_uuid_list'] = ApiClient.convertToType(data['item_uuid_list'], ['String']);
            }
            if (data.hasOwnProperty('item_status')) {
                obj['item_status'] = ItemStatus.constructFromObject(data['item_status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItemEditGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItemEditGroup</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ItemEditGroup.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['item_uuid_list'])) {
            throw new Error("Expected the field `item_uuid_list` to be an array in the JSON data but got " + data['item_uuid_list']);
        }

        return true;
    }


}

ItemEditGroup.RequiredProperties = ["item_uuid_list", "item_status"];

/**
 * Список идентификаторов позиций
 * @member {Array.<String>} item_uuid_list
 */
ItemEditGroup.prototype['item_uuid_list'] = undefined;

/**
 * @member {module:model/ItemStatus} item_status
 */
ItemEditGroup.prototype['item_status'] = undefined;






export default ItemEditGroup;

