/**
 * SmartTable Mobile API
 * API для управления рестораном.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RestaurantInfo from './RestaurantInfo';

/**
 * The AdminV1RestaurantListResponse model module.
 * @module model/AdminV1RestaurantListResponse
 * @version 1.0.0
 */
class AdminV1RestaurantListResponse {
    /**
     * Constructs a new <code>AdminV1RestaurantListResponse</code>.
     * @alias module:model/AdminV1RestaurantListResponse
     * @param restaurantList {Array.<module:model/RestaurantInfo>} 
     */
    constructor(restaurantList) { 
        
        AdminV1RestaurantListResponse.initialize(this, restaurantList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, restaurantList) { 
        obj['restaurant_list'] = restaurantList;
    }

    /**
     * Constructs a <code>AdminV1RestaurantListResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminV1RestaurantListResponse} obj Optional instance to populate.
     * @return {module:model/AdminV1RestaurantListResponse} The populated <code>AdminV1RestaurantListResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminV1RestaurantListResponse();

            if (data.hasOwnProperty('restaurant_list')) {
                obj['restaurant_list'] = ApiClient.convertToType(data['restaurant_list'], [RestaurantInfo]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminV1RestaurantListResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminV1RestaurantListResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdminV1RestaurantListResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['restaurant_list']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['restaurant_list'])) {
                throw new Error("Expected the field `restaurant_list` to be an array in the JSON data but got " + data['restaurant_list']);
            }
            // validate the optional field `restaurant_list` (array)
            for (const item of data['restaurant_list']) {
                RestaurantInfo.validateJSON(item);
            };
        }

        return true;
    }


}

AdminV1RestaurantListResponse.RequiredProperties = ["restaurant_list"];

/**
 * @member {Array.<module:model/RestaurantInfo>} restaurant_list
 */
AdminV1RestaurantListResponse.prototype['restaurant_list'] = undefined;






export default AdminV1RestaurantListResponse;

