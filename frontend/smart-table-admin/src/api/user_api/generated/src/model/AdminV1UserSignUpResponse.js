/**
 * SmartTable Mobile API
 * API для управления пользователем.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdminV1UserSignUpResponse model module.
 * @module model/AdminV1UserSignUpResponse
 * @version 1.0.0
 */
class AdminV1UserSignUpResponse {
    /**
     * Constructs a new <code>AdminV1UserSignUpResponse</code>.
     * @alias module:model/AdminV1UserSignUpResponse
     * @param userUuid {String} Уникальный идентификатор пользователя
     * @param jwtToken {String} 
     */
    constructor(userUuid, jwtToken) { 
        
        AdminV1UserSignUpResponse.initialize(this, userUuid, jwtToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, userUuid, jwtToken) { 
        obj['user_uuid'] = userUuid;
        obj['jwt_token'] = jwtToken;
    }

    /**
     * Constructs a <code>AdminV1UserSignUpResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminV1UserSignUpResponse} obj Optional instance to populate.
     * @return {module:model/AdminV1UserSignUpResponse} The populated <code>AdminV1UserSignUpResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminV1UserSignUpResponse();

            if (data.hasOwnProperty('user_uuid')) {
                obj['user_uuid'] = ApiClient.convertToType(data['user_uuid'], 'String');
            }
            if (data.hasOwnProperty('jwt_token')) {
                obj['jwt_token'] = ApiClient.convertToType(data['jwt_token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminV1UserSignUpResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminV1UserSignUpResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdminV1UserSignUpResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['user_uuid'] && !(typeof data['user_uuid'] === 'string' || data['user_uuid'] instanceof String)) {
            throw new Error("Expected the field `user_uuid` to be a primitive type in the JSON string but got " + data['user_uuid']);
        }
        // ensure the json data is a string
        if (data['jwt_token'] && !(typeof data['jwt_token'] === 'string' || data['jwt_token'] instanceof String)) {
            throw new Error("Expected the field `jwt_token` to be a primitive type in the JSON string but got " + data['jwt_token']);
        }

        return true;
    }


}

AdminV1UserSignUpResponse.RequiredProperties = ["user_uuid", "jwt_token"];

/**
 * Уникальный идентификатор пользователя
 * @member {String} user_uuid
 */
AdminV1UserSignUpResponse.prototype['user_uuid'] = undefined;

/**
 * @member {String} jwt_token
 */
AdminV1UserSignUpResponse.prototype['jwt_token'] = undefined;






export default AdminV1UserSignUpResponse;

